{"ast":null,"code":"var _jsxFileName = \"G:\\\\abroad uni\\\\KTU\\\\WEB\\\\myapp\\\\LAB3\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedToken = sessionStorage.getItem('token');\n    if (storedToken) {\n      fetchData(storedToken);\n    }\n  }, []);\n  const fetchData = async token => {\n    try {\n      const postsResponse = await fetch('/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const usersResponse = await fetch('/users', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (postsResponse.ok) {\n        const postsData = await postsResponse.json();\n        setPosts(postsData);\n      } else if (postsResponse.status === 401 || postsResponse.status === 403) {\n        sessionStorage.removeItem('token');\n        navigate('/login'); // Use useNavigate to navigate to the login page\n        return;\n      }\n      if (usersResponse.ok) {\n        const usersData = await usersResponse.json();\n        setUsers(usersData);\n      } else if (usersResponse.status === 401 || usersResponse.status === 403) {\n        sessionStorage.removeItem('token');\n        navigate('/login'); // Use useNavigate to navigate to the login page\n        return;\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.post_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", post.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this)]\n        }, post.post_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading users...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.username\n          }, user.user_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: setToken()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8q3U7/bD1WTQm0pJmDN4taJbjoQ=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","LoginPage","jsxDEV","_jsxDEV","App","_s","token","setToken","posts","setPosts","users","setUsers","navigate","storedToken","sessionStorage","getItem","fetchData","postsResponse","fetch","headers","Authorization","usersResponse","ok","postsData","json","status","removeItem","usersData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","post_content","user","post_id","username","user_id","onLogin","_c","$RefreshReg$"],"sources":["G:/abroad uni/KTU/WEB/myapp/LAB3/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport LoginPage from './LoginPage';\n\nfunction App() {\n    const [token, setToken] = useState('');\n    const [posts, setPosts] = useState([]);\n    const [users, setUsers] = useState([]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const storedToken = sessionStorage.getItem('token');\n\n        if (storedToken) {\n            fetchData(storedToken);\n        }\n    }, []);\n\n    const fetchData = async (token) => {\n        try {\n            const postsResponse = await fetch('/posts', {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const usersResponse = await fetch('/users', {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n\n            if (postsResponse.ok) {\n                const postsData = await postsResponse.json();\n                setPosts(postsData);\n            } else if (postsResponse.status === 401 || postsResponse.status === 403) {\n                sessionStorage.removeItem('token');\n                navigate('/login'); // Use useNavigate to navigate to the login page\n                return;\n            }\n\n            if (usersResponse.ok) {\n                const usersData = await usersResponse.json();\n                setUsers(usersData);\n            } else if (usersResponse.status === 401 || usersResponse.status === 403) {\n                sessionStorage.removeItem('token');\n                navigate('/login'); // Use useNavigate to navigate to the login page\n                return;\n            }\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    return (\n        <div>\n            {token ? (\n                <div>\n                    <div>\n                        <h1>Posts</h1>\n                        {posts.length === 0 ? (\n                            <p>Loading posts...</p>\n                        ) : (\n                            posts.map((post) => (\n                                <div key={post.post_id}>\n                                    <h3>{post.post_content}</h3>\n                                    <p>User: {post.user}</p>\n                                </div>\n                            ))\n                        )}\n                    </div>\n\n                    <div>\n                        <h1>Users</h1>\n                        {users.length === 0 ? (\n                            <p>Loading users...</p>\n                        ) : (\n                            <ul>\n                                {users.map((user) => (\n                                    <li key={user.user_id}>{user.username}</li>\n                                ))}\n                            </ul>\n                        )}\n                    </div>\n                </div>\n            ) : (\n                <LoginPage onLogin={setToken()}/>\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}