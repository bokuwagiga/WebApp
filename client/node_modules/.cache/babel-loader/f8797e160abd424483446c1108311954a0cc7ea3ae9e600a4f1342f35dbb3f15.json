{"ast":null,"code":"var _jsxFileName = \"G:\\\\abroad uni\\\\KTU\\\\WEB\\\\myapp\\\\LAB3\\\\client\\\\src\\\\PostPage.js\",\n  _s = $RefreshSig$();\n// PostPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport { jwtDecode } from 'jwt-decode';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostPage = ({\n  token\n}) => {\n  _s();\n  const {\n    post_id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [decodedToken, setDecodedToken] = useState({});\n  const [commentContent, setCommentContent] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch post data\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`/posts/${post_id}`);\n        if (response.ok) {\n          const postData = await response.json();\n          setPost(postData);\n        } else {\n          console.error('Error fetching post:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    };\n    fetchPost();\n  }, [post_id]);\n\n  // Handle logout\n  const handleLogout = () => {\n    sessionStorage.removeItem('token');\n    navigate('/login');\n  };\n  const handleAddComment = async () => {\n    try {\n      const response = await fetch(`/posts/${post_id}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          content: commentContent\n        })\n      });\n      if (response.ok) {\n        window.location.reload();\n      } else {\n        console.error('Error adding comment:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n\n  // Decode token\n  useEffect(() => {\n    const storedToken = sessionStorage.getItem('token');\n    if (storedToken) {\n      const decoded = jwtDecode(storedToken);\n      setDecodedToken(decoded);\n    }\n  }, []);\n\n  // Handle post update\n  const handleUpdatePost = async () => {\n    try {\n      // Prompt the user for the updated content\n      const updatedContent = prompt('Enter the updated post content:', post.post_content);\n      if (updatedContent !== null) {\n        const response = await fetch(`/posts/${post_id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            post_content: updatedContent\n          })\n        });\n        if (response.ok) {\n          // Reload the page to reflect the changes\n          window.location.reload();\n        } else {\n          console.error('Error updating post:', response.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating post:', error);\n    }\n  };\n\n  // Handle post deletion\n  const handleDeletePost = async () => {\n    try {\n      // Confirm with the user before deleting the post\n      const shouldDelete = window.confirm('Are you sure you want to delete this post?');\n      if (shouldDelete) {\n        const response = await fetch(`/posts/${post_id}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          // Navigate back to the posts page after deletion\n          navigate('/posts');\n        } else {\n          console.error('Error deleting post:', response.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      token: token,\n      decodedToken: decodedToken,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), post ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/users/${post.user_id}`,\n            className: \"user-link\",\n            children: post.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-actions\",\n            children: (decodedToken.user_id === post.user_id || decodedToken.is_admin) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleUpdatePost,\n                className: \"edit-post-button\",\n                children: \"Edit Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDeletePost,\n                className: \"delete-button\",\n                children: \"Delete Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: post.post_content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"cDyXEI8ytwG52KOgs5mck9tZS/8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","jwtDecode","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","PostPage","token","_s","post_id","post","setPost","decodedToken","setDecodedToken","commentContent","setCommentContent","navigate","fetchPost","response","fetch","ok","postData","json","console","error","statusText","handleLogout","sessionStorage","removeItem","handleAddComment","method","headers","Authorization","body","JSON","stringify","content","window","location","reload","storedToken","getItem","decoded","handleUpdatePost","updatedContent","prompt","post_content","handleDeletePost","shouldDelete","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","user_id","user","is_admin","onClick","_c","$RefreshReg$"],"sources":["G:/abroad uni/KTU/WEB/myapp/LAB3/client/src/PostPage.js"],"sourcesContent":["// PostPage.js\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useParams, Link, useNavigate} from 'react-router-dom';\r\nimport './App.css';\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport Header from './Header';\r\n\r\nconst PostPage = ({token}) => {\r\n    const {post_id} = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [decodedToken, setDecodedToken] = useState({});\r\n    const [commentContent, setCommentContent] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch post data\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await fetch(`/posts/${post_id}`);\r\n                if (response.ok) {\r\n                    const postData = await response.json();\r\n                    setPost(postData);\r\n                } else {\r\n                    console.error('Error fetching post:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching post:', error);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n    }, [post_id]);\r\n\r\n    // Handle logout\r\n    const handleLogout = () => {\r\n        sessionStorage.removeItem('token');\r\n        navigate('/login');\r\n    };\r\n\r\n    const handleAddComment = async () => {\r\n        try {\r\n            const response = await fetch(`/posts/${post_id}/comments`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({content: commentContent}),\r\n            });\r\n\r\n            if (response.ok) {\r\n                window.location.reload();\r\n            } else {\r\n                console.error('Error adding comment:', response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n        }\r\n    };\r\n\r\n    // Decode token\r\n    useEffect(() => {\r\n        const storedToken = sessionStorage.getItem('token');\r\n        if (storedToken) {\r\n            const decoded = jwtDecode(storedToken);\r\n            setDecodedToken(decoded);\r\n        }\r\n    }, []);\r\n\r\n    // Handle post update\r\n    const handleUpdatePost = async () => {\r\n        try {\r\n            // Prompt the user for the updated content\r\n            const updatedContent = prompt('Enter the updated post content:', post.post_content);\r\n\r\n            if (updatedContent !== null) {\r\n                const response = await fetch(`/posts/${post_id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({post_content: updatedContent}),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    // Reload the page to reflect the changes\r\n                    window.location.reload();\r\n                } else {\r\n                    console.error('Error updating post:', response.statusText);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating post:', error);\r\n        }\r\n    };\r\n\r\n    // Handle post deletion\r\n    const handleDeletePost = async () => {\r\n        try {\r\n            // Confirm with the user before deleting the post\r\n            const shouldDelete = window.confirm('Are you sure you want to delete this post?');\r\n\r\n            if (shouldDelete) {\r\n                const response = await fetch(`/posts/${post_id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                if (response.ok) {\r\n                    // Navigate back to the posts page after deletion\r\n                    navigate('/posts');\r\n                } else {\r\n                    console.error('Error deleting post:', response.statusText);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header token={token} decodedToken={decodedToken} handleLogout={handleLogout}/>\r\n            <div className=\"post-page\">\r\n                <h1>Post</h1>\r\n                {post ? (\r\n                    <div className=\"post\">\r\n                        <div className=\"post-header\">\r\n                            Author:\r\n                            <Link to={`/users/${post.user_id}`} className=\"user-link\">\r\n                                {post.user}\r\n                            </Link>\r\n                            <div className=\"post-actions\">\r\n                                {(decodedToken.user_id === post.user_id || decodedToken.is_admin) && (\r\n                                    <>\r\n                                        <button onClick={handleUpdatePost} className=\"edit-post-button\">\r\n                                            Edit Post\r\n                                        </button>\r\n                                        <button onClick={handleDeletePost} className=\"delete-button\">\r\n                                            Delete Post\r\n                                        </button>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"post-content\">{post.post_content}</div>\r\n                    </div>\r\n                ) : (\r\n                    <p>Loading post...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}