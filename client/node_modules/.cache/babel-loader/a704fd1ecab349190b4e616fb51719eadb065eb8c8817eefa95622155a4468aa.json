{"ast":null,"code":"var _jsxFileName = \"G:\\\\abroad uni\\\\KTU\\\\WEB\\\\myapp\\\\LAB3\\\\client\\\\src\\\\PostPage.js\",\n  _s = $RefreshSig$();\n// PostPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport { jwtDecode } from 'jwt-decode';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostPage = ({\n  token\n}) => {\n  _s();\n  const {\n    post_id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [decodedToken, setDecodedToken] = useState({});\n  const navigate = useNavigate();\n\n  // Fetch post data\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`/posts/${post_id}`);\n        if (response.ok) {\n          const postData = await response.json();\n          setPost(postData);\n        } else {\n          console.error('Error fetching post:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    };\n    fetchPost();\n  }, [post_id]);\n\n  // Handle logout\n  const handleLogout = () => {\n    sessionStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  // Decode token\n  useEffect(() => {\n    const storedToken = sessionStorage.getItem('token');\n    if (storedToken) {\n      const decoded = jwtDecode(storedToken);\n      setDecodedToken(decoded);\n    }\n  }, []);\n\n  // Handle post update\n  const handleUpdatePost = async () => {\n    try {\n      // Prompt the user for the updated content\n      const updatedContent = prompt('Enter the updated post content:', post.post_content);\n      if (updatedContent !== null) {\n        const response = await fetch(`/posts/${post_id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            post_content: updatedContent\n          })\n        });\n        if (response.ok) {\n          // Reload the page to reflect the changes\n          window.location.reload();\n        } else {\n          console.error('Error updating post:', response.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating post:', error);\n    }\n  };\n\n  // Handle post deletion\n  const handleDeletePost = async () => {\n    try {\n      // Confirm with the user before deleting the post\n      const shouldDelete = window.confirm('Are you sure you want to delete this post?');\n      if (shouldDelete) {\n        const response = await fetch(`/posts/${post_id}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          // Navigate back to the posts page after deletion\n          navigate('/posts');\n        } else {\n          console.error('Error deleting post:', response.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      token: token,\n      decodedToken: decodedToken,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), post ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [\"Author: \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/users/${post.user_id}`,\n            className: \"user-link\",\n            children: post.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }, this), (decodedToken.user_id === post.user_id || decodedToken.is_admin) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdatePost,\n              className: \"edit-post-button\",\n              children: \"Edit Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeletePost,\n              className: \"delete-button\",\n              children: \"Delete Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: post.post_content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"zlZ36CevTGiv5KX7ABEAIZ8xYFw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","jwtDecode","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","PostPage","token","_s","post_id","post","setPost","decodedToken","setDecodedToken","navigate","fetchPost","response","fetch","ok","postData","json","console","error","statusText","handleLogout","sessionStorage","removeItem","storedToken","getItem","decoded","handleUpdatePost","updatedContent","prompt","post_content","method","headers","Authorization","body","JSON","stringify","window","location","reload","handleDeletePost","shouldDelete","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","user_id","user","is_admin","onClick","_c","$RefreshReg$"],"sources":["G:/abroad uni/KTU/WEB/myapp/LAB3/client/src/PostPage.js"],"sourcesContent":["// PostPage.js\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useParams, Link, useNavigate} from 'react-router-dom';\r\nimport './App.css';\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport Header from './Header';\r\n\r\nconst PostPage = ({token}) => {\r\n    const {post_id} = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [decodedToken, setDecodedToken] = useState({});\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch post data\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await fetch(`/posts/${post_id}`);\r\n                if (response.ok) {\r\n                    const postData = await response.json();\r\n                    setPost(postData);\r\n                } else {\r\n                    console.error('Error fetching post:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching post:', error);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n    }, [post_id]);\r\n\r\n    // Handle logout\r\n    const handleLogout = () => {\r\n        sessionStorage.removeItem('token');\r\n        navigate('/login');\r\n    };\r\n\r\n    // Decode token\r\n    useEffect(() => {\r\n        const storedToken = sessionStorage.getItem('token');\r\n        if (storedToken) {\r\n            const decoded = jwtDecode(storedToken);\r\n            setDecodedToken(decoded);\r\n        }\r\n    }, []);\r\n\r\n    // Handle post update\r\n    const handleUpdatePost = async () => {\r\n        try {\r\n            // Prompt the user for the updated content\r\n            const updatedContent = prompt('Enter the updated post content:', post.post_content);\r\n\r\n            if (updatedContent !== null) {\r\n                const response = await fetch(`/posts/${post_id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({post_content: updatedContent}),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    // Reload the page to reflect the changes\r\n                    window.location.reload();\r\n                } else {\r\n                    console.error('Error updating post:', response.statusText);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating post:', error);\r\n        }\r\n    };\r\n\r\n    // Handle post deletion\r\n    const handleDeletePost = async () => {\r\n        try {\r\n            // Confirm with the user before deleting the post\r\n            const shouldDelete = window.confirm('Are you sure you want to delete this post?');\r\n\r\n            if (shouldDelete) {\r\n                const response = await fetch(`/posts/${post_id}`, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                if (response.ok) {\r\n                    // Navigate back to the posts page after deletion\r\n                    navigate('/posts');\r\n                } else {\r\n                    console.error('Error deleting post:', response.statusText);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header token={token} decodedToken={decodedToken} handleLogout={handleLogout}/>\r\n            <div className=\"post-page\">\r\n                <h1>Post</h1>\r\n                {post ? (\r\n                    <div className=\"post\">\r\n                        <div className=\"post-header\">\r\n                            Author: <Link to={`/users/${post.user_id}`} className=\"user-link\">\r\n                            {post.user}\r\n                        </Link>\r\n                            {(decodedToken.user_id === post.user_id || decodedToken.is_admin) && (\r\n                                <>\r\n                                    <button onClick={handleUpdatePost} className=\"edit-post-button\">\r\n                                        Edit Post\r\n                                    </button>\r\n                                    <button onClick={handleDeletePost} className=\"delete-button\">\r\n                                        Delete Post\r\n                                    </button>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"post-content\">{post.post_content}</div>\r\n                        <div className=\"post-actions\">\r\n\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <p>Loading post...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}