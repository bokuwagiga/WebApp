{"ast":null,"code":"var _jsxFileName = \"G:\\\\abroad uni\\\\KTU\\\\WEB\\\\myapp\\\\LAB3\\\\client\\\\src\\\\CommentPage.js\",\n  _s = $RefreshSig$();\n// CommentPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport Header from './Header';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentPage = ({\n  token\n}) => {\n  _s();\n  const {\n    comment_id\n  } = useParams();\n  const [comment, setComment] = useState(null);\n  const [decodedToken, setDecodedToken] = useState({});\n  const [editedContent, setEditedContent] = useState('');\n  const [isEditing, setEditing] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchComment = async () => {\n      try {\n        const commentResponse = await fetch(`/comments/${comment_id}`);\n        if (commentResponse.ok) {\n          const commentData = await commentResponse.json();\n          setComment(commentData);\n        } else {\n          console.error('Error fetching comment:', commentResponse.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching comment:', error);\n      }\n    };\n    fetchComment();\n  }, [comment_id]);\n\n  // Decode token\n  useEffect(() => {\n    const storedToken = sessionStorage.getItem('token');\n    if (storedToken) {\n      const decodedToken = jwtDecode(storedToken);\n      setDecodedToken(decodedToken);\n    }\n  }, []);\n  const handleLogout = () => {\n    sessionStorage.removeItem('token');\n    navigate('/login');\n  };\n  const handleEditComment = () => {\n    // Set isEditing to true to render the textarea for editing\n    setEditing(true);\n    setEditedContent(comment.comment_content);\n  };\n  const handleSaveEdit = async () => {\n    try {\n      const response = await fetch(`/comments/${comment_id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          comment_content: editedContent\n        })\n      });\n      if (response.ok) {\n        // Reset isEditing state after saving the edit\n        setEditing(false);\n        // Reload the page to reflect the changes\n        window.location.reload();\n      } else {\n        console.error('Error updating comment:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error updating comment:', error);\n    }\n  };\n  const handleCancelEdit = () => {\n    // Reset isEditing state without saving the edit\n    setEditing(false);\n    setEditedContent('');\n  };\n  const handleDeleteComment = async () => {\n    try {\n      const shouldDelete = window.confirm('Are you sure you want to delete this comment?');\n      if (shouldDelete) {\n        const response = await fetch(`/comments/${comment_id}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          navigate('/posts'); // Navigate to the desired route after comment deletion\n        } else {\n          console.error('Error deleting comment:', response.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      token: token,\n      decodedToken: decodedToken,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), comment ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/users/${comment.user_id}`,\n            className: \"user-link\",\n            children: comment.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-actions\",\n            children: (decodedToken.user_id === comment.user_id || decodedToken.is_admin) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleEditComment,\n                className: \"edit-comment-button\",\n                children: \"Edit Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDeleteComment,\n                className: \"delete-button\",\n                children: \"Delete Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedContent,\n            onChange: e => setEditedContent(e.target.value),\n            placeholder: \"Enter the edited comment content...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveEdit,\n            className: \"post-button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            className: \"post-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: comment.comment_content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentPage, \"amk3gywrDU8p2D82ylP0FSlfNzU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CommentPage;\nexport default CommentPage;\nvar _c;\n$RefreshReg$(_c, \"CommentPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Link","jwtDecode","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentPage","token","_s","comment_id","comment","setComment","decodedToken","setDecodedToken","editedContent","setEditedContent","isEditing","setEditing","navigate","fetchComment","commentResponse","fetch","ok","commentData","json","console","error","statusText","storedToken","sessionStorage","getItem","handleLogout","removeItem","handleEditComment","comment_content","handleSaveEdit","response","method","headers","Authorization","body","JSON","stringify","window","location","reload","handleCancelEdit","handleDeleteComment","shouldDelete","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","user_id","user","is_admin","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["G:/abroad uni/KTU/WEB/myapp/LAB3/client/src/CommentPage.js"],"sourcesContent":["// CommentPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport Header from './Header';\r\nimport './App.css';\r\n\r\nconst CommentPage = ({ token }) => {\r\n  const { comment_id } = useParams();\r\n  const [comment, setComment] = useState(null);\r\n  const [decodedToken, setDecodedToken] = useState({});\r\n  const [editedContent, setEditedContent] = useState('');\r\n  const [isEditing, setEditing] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchComment = async () => {\r\n      try {\r\n        const commentResponse = await fetch(`/comments/${comment_id}`);\r\n\r\n        if (commentResponse.ok) {\r\n          const commentData = await commentResponse.json();\r\n          setComment(commentData);\r\n        } else {\r\n          console.error('Error fetching comment:', commentResponse.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching comment:', error);\r\n      }\r\n    };\r\n\r\n    fetchComment();\r\n  }, [comment_id]);\r\n\r\n  // Decode token\r\n  useEffect(() => {\r\n    const storedToken = sessionStorage.getItem('token');\r\n    if (storedToken) {\r\n      const decodedToken = jwtDecode(storedToken);\r\n      setDecodedToken(decodedToken);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem('token');\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleEditComment = () => {\r\n    // Set isEditing to true to render the textarea for editing\r\n    setEditing(true);\r\n    setEditedContent(comment.comment_content);\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    try {\r\n      const response = await fetch(`/comments/${comment_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ comment_content: editedContent }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Reset isEditing state after saving the edit\r\n        setEditing(false);\r\n        // Reload the page to reflect the changes\r\n        window.location.reload();\r\n      } else {\r\n        console.error('Error updating comment:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating comment:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    // Reset isEditing state without saving the edit\r\n    setEditing(false);\r\n    setEditedContent('');\r\n  };\r\n\r\n  const handleDeleteComment = async () => {\r\n    try {\r\n      const shouldDelete = window.confirm('Are you sure you want to delete this comment?');\r\n\r\n      if (shouldDelete) {\r\n        const response = await fetch(`/comments/${comment_id}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          navigate('/posts'); // Navigate to the desired route after comment deletion\r\n        } else {\r\n          console.error('Error deleting comment:', response.statusText);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header token={token} decodedToken={decodedToken} handleLogout={handleLogout} />\r\n      <div className=\"comment-page\">\r\n        <h1>Comment</h1>\r\n        {comment ? (\r\n          <div className=\"comment\">\r\n            <div className=\"comment-header\">\r\n              Author:\r\n              <Link to={`/users/${comment.user_id}`} className=\"user-link\">\r\n                {comment.user}\r\n              </Link>\r\n              <div className=\"comment-actions\">\r\n                {(decodedToken.user_id === comment.user_id || decodedToken.is_admin) && (\r\n                  <>\r\n                    {!isEditing && (\r\n                      <button onClick={handleEditComment} className=\"edit-comment-button\">\r\n                        Edit Comment\r\n                      </button>\r\n                    )}\r\n                    <button onClick={handleDeleteComment} className=\"delete-button\">\r\n                      Delete Comment\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {isEditing ? (\r\n              <div className=\"edit-comment-form\">\r\n                <textarea\r\n                  value={editedContent}\r\n                  onChange={(e) => setEditedContent(e.target.value)}\r\n                  placeholder=\"Enter the edited comment content...\"\r\n                />\r\n                <button onClick={handleSaveEdit} className=\"post-button\">\r\n                  Save\r\n                </button>\r\n                <button onClick={handleCancelEdit} className=\"post-button\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"comment-content\">{comment.comment_content}</div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <p>Loading comment...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}