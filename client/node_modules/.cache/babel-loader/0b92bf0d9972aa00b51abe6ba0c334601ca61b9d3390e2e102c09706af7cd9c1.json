{"ast":null,"code":"var _jsxFileName = \"G:\\\\abroad uni\\\\KTU\\\\WEB\\\\myapp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoginPage from './LoginPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [username, setUsername] = useState(''); // Declare username state\n  const [password, setPassword] = useState(''); // Declare password state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/posts', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setPosts(data);\n        }\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n      try {\n        const response = await fetch('/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUsers(data);\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    if (token) {\n      fetchData();\n    }\n  }, [token]);\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setToken(data.token);\n      } else {\n        console.error('Login failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('/logout', {\n        method: 'POST',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setToken('');\n      } else {\n        console.error('Logout failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.post_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", post.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this)]\n        }, post.post_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading users...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.username\n          }, user.user_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin,\n      setUsername: setUsername // Pass setUsername to LoginPage component\n      ,\n      setPassword: setPassword // Pass setPassword to LoginPage component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iu1Khw6ArR7VjxBxSvBu16fvoig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginPage","jsxDEV","_jsxDEV","App","_s","token","setToken","posts","setPosts","users","setUsers","username","setUsername","password","setPassword","fetchData","response","fetch","headers","Authorization","credentials","ok","data","json","error","console","handleLogin","method","body","JSON","stringify","statusText","handleLogout","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","post_content","user","post_id","user_id","onLogin","_c","$RefreshReg$"],"sources":["G:/abroad uni/KTU/WEB/myapp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LoginPage from './LoginPage';\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [username, setUsername] = useState('');  // Declare username state\n  const [password, setPassword] = useState('');  // Declare password state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/posts', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          credentials: 'include',\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setPosts(data);\n        }\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n\n      try {\n        const response = await fetch('/users', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          credentials: 'include',\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setUsers(data);\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    if (token) {\n      fetchData();\n    }\n  }, [token]);\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n        credentials: 'include',\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setToken(data.token);\n      } else {\n        console.error('Login failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('/logout', {\n        method: 'POST',\n        credentials: 'include',\n      });\n\n      if (response.ok) {\n        setToken('');\n      } else {\n        console.error('Logout failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  };\n\n  return (\n    <div>\n      {token ? (\n        <div>\n          <button onClick={handleLogout}>Logout</button>\n\n          <div>\n            <h1>Posts</h1>\n            {posts.length === 0 ? (\n              <p>Loading posts...</p>\n            ) : (\n              posts.map((post) => (\n                <div key={post.post_id}>\n                  <h3>{post.post_content}</h3>\n                  <p>User: {post.user}</p>\n                </div>\n              ))\n            )}\n          </div>\n\n          <div>\n            <h1>Users</h1>\n            {users.length === 0 ? (\n              <p>Loading users...</p>\n            ) : (\n              <ul>\n                {users.map((user) => (\n                  <li key={user.user_id}>{user.username}</li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      ) : (\n        <LoginPage\n          onLogin={handleLogin}\n          setUsername={setUsername}  // Pass setUsername to LoginPage component\n          setPassword={setPassword}  // Pass setPassword to LoginPage component\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;UACrCC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASd,KAAM;UACjC,CAAC;UACDe,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UAClCf,QAAQ,CAACc,IAAI,CAAC;QAChB;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;MAEA,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;UACrCC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASd,KAAM;UACjC,CAAC;UACDe,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UAClCb,QAAQ,CAACY,IAAI,CAAC;QAChB;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAED,IAAInB,KAAK,EAAE;MACTU,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;QACrCU,MAAM,EAAE,MAAM;QACdT,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnB,QAAQ;UAAEE;QAAS,CAAC,CAAC;QAC5CO,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCjB,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC;MACtB,CAAC,MAAM;QACLoB,OAAO,CAACD,KAAK,CAAC,eAAe,EAAER,QAAQ,CAACe,UAAU,CAAC;MACrD;IACF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;QACtCU,MAAM,EAAE,MAAM;QACdP,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACff,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACLmB,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAER,QAAQ,CAACe,UAAU,CAAC;MACtD;IACF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEtB,OAAA;IAAA+B,QAAA,EACG5B,KAAK,gBACJH,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAQgC,OAAO,EAAEF,YAAa;QAAAC,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE9CpC,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACb/B,KAAK,CAACgC,MAAM,KAAK,CAAC,gBACjBrC,OAAA;UAAA+B,QAAA,EAAG;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GAEvB/B,KAAK,CAACiC,GAAG,CAAEC,IAAI,iBACbvC,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,EAAKQ,IAAI,CAACC;UAAY;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5BpC,OAAA;YAAA+B,QAAA,GAAG,QAAM,EAACQ,IAAI,CAACE,IAAI;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFhBG,IAAI,CAACG,OAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGjB,CACN,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENpC,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACb7B,KAAK,CAAC8B,MAAM,KAAK,CAAC,gBACjBrC,OAAA;UAAA+B,QAAA,EAAG;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEvBpC,OAAA;UAAA+B,QAAA,EACGxB,KAAK,CAAC+B,GAAG,CAAEG,IAAI,iBACdzC,OAAA;YAAA+B,QAAA,EAAwBU,IAAI,CAAChC;UAAQ,GAA5BgC,IAAI,CAACE,OAAO;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAC3C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENpC,OAAA,CAACF,SAAS;MACR8C,OAAO,EAAEpB,WAAY;MACrBd,WAAW,EAAEA,WAAY,CAAE;MAAA;MAC3BE,WAAW,EAAEA,WAAY,CAAE;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CAhIID,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AAkIT,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}