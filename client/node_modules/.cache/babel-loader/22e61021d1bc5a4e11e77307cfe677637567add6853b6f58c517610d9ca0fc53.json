{"ast":null,"code":"var _jsxFileName = \"G:\\\\abroad uni\\\\KTU\\\\WEB\\\\myapp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoginPage from './LoginPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [username, setUsername] = useState(''); // Declare username state\n  const [password, setPassword] = useState(''); // Declare password state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/posts', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setPosts(data);\n        }\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n      try {\n        const response = await fetch('/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUsers(data);\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    if (token) {\n      fetchData();\n    }\n  }, [token]);\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: 'include'\n      });\n      console.log('Response:', response);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Login successful:', data);\n        setToken(data.token);\n      } else {\n        console.error('Login failed:', response.statusText);\n        const errorData = await response.json().catch(() => {});\n        console.error('Error data:', errorData);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('/logout', {\n        method: 'POST',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setToken('');\n      } else {\n        console.error('Logout failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.post_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", post.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }, this)]\n        }, post.post_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading users...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.username\n          }, user.user_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin,\n      setUsername: setUsername // Pass setUsername to LoginPage component\n      ,\n      setPassword: setPassword // Pass setPassword to LoginPage component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"iu1Khw6ArR7VjxBxSvBu16fvoig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginPage","jsxDEV","_jsxDEV","App","_s","token","setToken","posts","setPosts","users","setUsers","username","setUsername","password","setPassword","fetchData","response","fetch","headers","Authorization","credentials","ok","data","json","error","console","handleLogin","method","body","JSON","stringify","log","statusText","errorData","catch","handleLogout","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","post_content","user","post_id","user_id","onLogin","_c","$RefreshReg$"],"sources":["G:/abroad uni/KTU/WEB/myapp/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport LoginPage from './LoginPage';\n\nconst App = () => {\n    const [token, setToken] = useState('');\n    const [posts, setPosts] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [username, setUsername] = useState('');  // Declare username state\n    const [password, setPassword] = useState('');  // Declare password state\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch('/posts', {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                    credentials: 'include',\n                });\n\n                if (response.ok) {\n                    const data = await response.json();\n                    setPosts(data);\n                }\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n\n            try {\n                const response = await fetch('/users', {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                    credentials: 'include',\n                });\n\n                if (response.ok) {\n                    const data = await response.json();\n                    setUsers(data);\n                }\n            } catch (error) {\n                console.error('Error fetching users:', error);\n            }\n        };\n\n        if (token) {\n            fetchData();\n        }\n    }, [token]);\n\n    const handleLogin = async () => {\n        try {\n            const response = await fetch('/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({username, password}),\n                credentials: 'include',\n            });\n\n            console.log('Response:', response);\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('Login successful:', data);\n                setToken(data.token);\n            } else {\n                console.error('Login failed:', response.statusText);\n                const errorData = await response.json().catch(() => {\n                });\n                console.error('Error data:', errorData);\n            }\n        } catch (error) {\n            console.error('Error during login:', error);\n        }\n    };\n\n\n    const handleLogout = async () => {\n        try {\n            const response = await fetch('/logout', {\n                method: 'POST',\n                credentials: 'include',\n            });\n\n            if (response.ok) {\n                setToken('');\n            } else {\n                console.error('Logout failed:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error during logout:', error);\n        }\n    };\n\n    return (\n        <div>\n            {token ? (\n                <div>\n                    <button onClick={handleLogout}>Logout</button>\n\n                    <div>\n                        <h1>Posts</h1>\n                        {posts.length === 0 ? (\n                            <p>Loading posts...</p>\n                        ) : (\n                            posts.map((post) => (\n                                <div key={post.post_id}>\n                                    <h3>{post.post_content}</h3>\n                                    <p>User: {post.user}</p>\n                                </div>\n                            ))\n                        )}\n                    </div>\n\n                    <div>\n                        <h1>Users</h1>\n                        {users.length === 0 ? (\n                            <p>Loading users...</p>\n                        ) : (\n                            <ul>\n                                {users.map((user) => (\n                                    <li key={user.user_id}>{user.username}</li>\n                                ))}\n                            </ul>\n                        )}\n                    </div>\n                </div>\n            ) : (\n                <LoginPage\n                    onLogin={handleLogin}\n                    setUsername={setUsername}  // Pass setUsername to LoginPage component\n                    setPassword={setPassword}  // Pass setPassword to LoginPage component\n                />\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}