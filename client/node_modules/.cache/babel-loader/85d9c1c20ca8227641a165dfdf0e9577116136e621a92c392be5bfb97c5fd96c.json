{"ast":null,"code":"var _jsxFileName = \"G:\\\\abroad uni\\\\KTU\\\\WEB\\\\myapp\\\\LAB3\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoginPage from './LoginPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const storedToken = sessionStorage.getItem(\"token\");\n    if (storedToken && storedToken != \"\" && storedToken != undefined) {}\n    // Fetch posts and users with token\n    const fetchData = async () => {\n      try {\n        const postsResponse = await fetch('/posts', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const usersResponse = await fetch('/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (postsResponse.ok) {\n          const postsData = await postsResponse.json();\n          setPosts(postsData);\n        }\n        if (usersResponse.ok) {\n          const usersData = await usersResponse.json();\n          setUsers(usersData);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    if (token) {\n      fetchData();\n    }\n  }, [token]);\n  const handleLogin = newToken => {\n    setToken(newToken);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.post_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", post.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)]\n        }, post.post_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading users...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.username\n          }, user.user_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aTxvV8ggVBKoiaIObHDlA4WA/4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginPage","jsxDEV","_jsxDEV","App","_s","token","setToken","posts","setPosts","users","setUsers","storedToken","sessionStorage","getItem","undefined","fetchData","postsResponse","fetch","headers","Authorization","usersResponse","ok","postsData","json","usersData","error","console","handleLogin","newToken","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","post_content","user","post_id","username","user_id","onLogin","_c","$RefreshReg$"],"sources":["G:/abroad uni/KTU/WEB/myapp/LAB3/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LoginPage from './LoginPage';\n\nfunction App() {\n  const [token, setToken] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const storedToken = sessionStorage.getItem(\"token\");\n    if (storedToken && storedToken != \"\" && storedToken != undefined)\n    {\n\n    }\n    // Fetch posts and users with token\n    const fetchData = async () => {\n      try {\n        const postsResponse = await fetch('/posts', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const usersResponse = await fetch('/users', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (postsResponse.ok) {\n          const postsData = await postsResponse.json();\n          setPosts(postsData);\n        }\n\n        if (usersResponse.ok) {\n          const usersData = await usersResponse.json();\n          setUsers(usersData);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    if (token) {\n      fetchData();\n    }\n  }, [token]);\n\n  const handleLogin = (newToken) => {\n    setToken(newToken);\n  };\n\n  return (\n    <div>\n      {token ? (\n        <div>\n          <div>\n            <h1>Posts</h1>\n            {posts.length === 0 ? (\n              <p>Loading posts...</p>\n            ) : (\n              posts.map((post) => (\n                <div key={post.post_id}>\n                  <h3>{post.post_content}</h3>\n                  <p>User: {post.user}</p>\n                </div>\n              ))\n            )}\n          </div>\n\n          <div>\n            <h1>Users</h1>\n            {users.length === 0 ? (\n              <p>Loading users...</p>\n            ) : (\n              <ul>\n                {users.map((user) => (\n                  <li key={user.user_id}>{user.username}</li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      ) : (\n        <LoginPage onLogin={handleLogin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}